[tool.poetry]
name = "strawberry-django-jwt"
version = "0.2.1.dev.1645529133"
description = "Strawberry-graphql port of the graphene-django-jwt package"
license = "MIT"
authors = ["VojtÄ›ch Dohnal <vojdoh@gmail.com>"]
maintainers = []
readme = "README.md"
classifiers = [
    'Development Status :: 3 - Alpha',
    'Environment :: Web Environment',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Operating System :: OS Independent',
    'Framework :: Django',
    'Framework :: Django :: 3.2',
    'Framework :: Django :: 4.0',
]
packages = [
    { include = "strawberry_django_jwt" }
]

[tool.poetry.dependencies]
python = "^3.7"
Django = [
    { version = ">=3.2,<4", markers = "python_version < '3.8'", optional = true },
    { version = ">=3.2,<5", markers = "python_version >= '3.8'", optional = true }
]
PyJWT = ">=1.7.1,<3.0"
strawberry-graphql = ">=0.69.0,<1.0.0"
strawberry-graphql-django = { version = ">=0.2.5,<4.0", allow-prereleases = true }
django-admin-display = "^1.3.0"
packaging = ">=20.0,<30.0"
importlib-metadata = { version = "^1.7.0", python = "<=3.7" }

[tool.poetry.dev-dependencies]
cryptography = "^36.0"
coverage = "^6.1"
pytest = "^6.2"
pytest-cov = "^3.0"
pytest-django = "^4.0.0"
nox = "^2022.1.7"
types-cryptography = "^3.3.9"
django-stubs = "^1.9.0"
django-mock-queries = "^2.1.7"
types-mock = "^4.0.0"
types-jwt = "^0.1.0"
types-pkg-resources = "^0.1.0"
pre-commit = "^2.17.0"
pre-commit-hooks = "^4.0.0"
autopep8 = "^1.1"
darglint = "^1.5.0"
mypy = "^0.931"
safety = "^1.0"
pylint = "^2.12.2"
poetry = "^1.1.10"
djangorestframework-stubs = "^1.4.0"
djangorestframework = "^3.12.4"
uvicorn = { extras = ["standard"], version = "^0.16.0" }

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
DJANGO_SETTINGS_MODULE = "tests.example_app.settings"
python_files = "tests.py test_*.py *_tests.py"

[tool.poetry.urls]
"Homepage" = "https://github.com/KundaPanda/strawberry-django-jwt/"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
