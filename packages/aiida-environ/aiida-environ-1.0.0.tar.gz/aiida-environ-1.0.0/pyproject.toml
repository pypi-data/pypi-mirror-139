[build-system]
requires = ['flit_core >=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = "aiida-environ"
version = "1.0.0"
description = "AiiDA plugin for Environ"
readme = "README.md"
license = {file = "LICENSE.txt"}
keywords = ["aiida", "workflows", "environ"]
authors = [
    {email = "materialab@unt.edu"},
    {name = "MateriaLAB"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9"
]
dependencies = [
    "aiida_core>=1.6",
    "aiida_quantumespresso>=3.5",
    "numpy"
]

[project.urls]
source = 'https://github.com/environ-developers/aiida-environ'

[project.optional-dependencies]
docs = [
    'Sphinx'
]
tests = [
    'pytest~=6.0'
]


[project.entry-points.'aiida.calculations']
"environ.pw" = "aiida_environ.calculations.pw:EnvPwCalculation"
"environ.finite" = "aiida_environ.calculations.finite:calculate_finite_differences"

[project.entry-points.'aiida.data']
"environ.charges" = "aiida_environ.data.charge:EnvironChargeData"

[project.entry-points.'aiida.parsers']
"environ.pw" = "aiida_environ.parsers.pw:EnvPwParser"

[project.entry-points.'aiida.workflows']
"environ.pw.base" = "aiida_environ.workflows.pw.base:EnvPwBaseWorkChain"
"environ.pw.relax" = "aiida_environ.workflows.pw.relax:EnvPwRelaxWorkChain"
"environ.pw.solvation" = "aiida_environ.workflows.pw.solvation:PwSolvationWorkChain"
"environ.pw.force_test" = "aiida_environ.workflows.pw.force_test:EnvPwForceTestWorkChain"

[tool.flit.module]
name = 'aiida_environ'

