{"version":3,"file":"e89ab097.js","mappings":";;;AAgHA;AAKA;AACA;AACA;AACA;;;;AAIA;AAKA;AACA;AACA;;;AAGA;AAKA;AACA;AACA;;;AAGA;AAKA;AACA;AACA;AACA;AACA;;;;;AAKA;AAKA;AACA;;;;AAIA;;AAEA;;;;AAIA;AAKA;AACA;AACA;;;;;;AAMA;AAGA;;;AAGA;AACA;AACA;;;;;;AAMA;AAGA;;;AAGA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;;;;AAIA;AAKA;AACA;AACA;AACA;AACA;;;AAGA;AAKA;AACA;AACA;AACA;AACA;;;;AAxMA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/editor/config-elements/hui-picture-entity-card-editor.ts"],"sourcesContent":["import \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport { CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { assert, boolean, object, optional, string, assign } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { computeRTLDirection } from \"../../../../common/util/compute_rtl\";\nimport \"../../../../components/ha-formfield\";\nimport \"../../../../components/ha-switch\";\nimport { ActionConfig } from \"../../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { PictureEntityCardConfig } from \"../../cards/types\";\nimport \"../../components/hui-action-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../components/hui-theme-select-editor\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { actionConfigStruct } from \"../structs/action-struct\";\nimport { EditorTarget } from \"../types\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    entity: optional(string()),\n    image: optional(string()),\n    name: optional(string()),\n    camera_image: optional(string()),\n    camera_view: optional(string()),\n    aspect_ratio: optional(string()),\n    tap_action: optional(actionConfigStruct),\n    hold_action: optional(actionConfigStruct),\n    show_name: optional(boolean()),\n    show_state: optional(boolean()),\n    theme: optional(string()),\n  })\n);\n\nconst includeDomains = [\"camera\"];\n\n@customElement(\"hui-picture-entity-card-editor\")\nexport class HuiPictureEntityCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: PictureEntityCardConfig;\n\n  public setConfig(config: PictureEntityCardConfig): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _image(): string {\n    return this._config!.image || \"\";\n  }\n\n  get _camera_image(): string {\n    return this._config!.camera_image || \"\";\n  }\n\n  get _camera_view(): string {\n    return this._config!.camera_view || \"auto\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _tap_action(): ActionConfig {\n    return this._config!.tap_action || { action: \"more-info\" };\n  }\n\n  get _hold_action(): ActionConfig | undefined {\n    return this._config!.hold_action;\n  }\n\n  get _show_name(): boolean {\n    return this._config!.show_name ?? true;\n  }\n\n  get _show_state(): boolean {\n    return this._config!.show_state ?? true;\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"\";\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    const actions = [\"more-info\", \"toggle\", \"navigate\", \"call-service\", \"none\"];\n    const views = [\"auto\", \"live\"];\n    const dir = computeRTLDirection(this.hass!);\n\n    return html`\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=${this.hass}\n          .value=${this._entity}\n          .configValue=${\"entity\"}\n          @value-changed=${this._valueChanged}\n          allow-custom-entity\n        ></ha-entity-picker>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.name\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @value-changed=${this._valueChanged}\n        ></paper-input>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.image\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=${this._image}\n          .configValue=${\"image\"}\n          @value-changed=${this._valueChanged}\n        ></paper-input>\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.camera_image\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .hass=${this.hass}\n          .value=${this._camera_image}\n          .configValue=${\"camera_image\"}\n          @value-changed=${this._valueChanged}\n          .includeDomains=${includeDomains}\n          allow-custom-entity\n        ></ha-entity-picker>\n        <div class=\"side-by-side\">\n          <paper-dropdown-menu\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.camera_view\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .configValue=${\"camera_view\"}\n            @value-changed=${this._valueChanged}\n          >\n            <paper-listbox\n              slot=\"dropdown-content\"\n              .selected=${views.indexOf(this._camera_view)}\n            >\n              ${views.map((view) => html` <paper-item>${view}</paper-item> `)}\n            </paper-listbox>\n          </paper-dropdown-menu>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.aspect_ratio\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=${this._aspect_ratio}\n            .configValue=${\"aspect_ratio\"}\n            @value-changed=${this._valueChanged}\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <div>\n            <ha-formfield\n              .label=${this.hass.localize(\n                \"ui.panel.lovelace.editor.card.generic.show_name\"\n              )}\n              .dir=${dir}\n            >\n              <ha-switch\n                .checked=${this._config!.show_name !== false}\n                .configValue=${\"show_name\"}\n                @change=${this._change}\n              ></ha-switch\n            ></ha-formfield>\n          </div>\n          <div>\n            <ha-formfield\n              .label=${this.hass.localize(\n                \"ui.panel.lovelace.editor.card.generic.show_state\"\n              )}\n              .dir=${dir}\n            >\n              <ha-switch\n                .checked=${this._config!.show_state !== false}\n                .configValue=${\"show_state\"}\n                @change=${this._change}\n              ></ha-switch\n            ></ha-formfield>\n          </div>\n        </div>\n        <hui-theme-select-editor\n          .hass=${this.hass}\n          .value=${this._theme}\n          .configValue=${\"theme\"}\n          @value-changed=${this._valueChanged}\n        ></hui-theme-select-editor>\n        <div class=\"side-by-side\">\n          <hui-action-editor\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.tap_action\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .hass=${this.hass}\n            .config=${this._tap_action}\n            .actions=${actions}\n            .configValue=${\"tap_action\"}\n            @value-changed=${this._valueChanged}\n          ></hui-action-editor>\n          <hui-action-editor\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.hold_action\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .hass=${this.hass}\n            .config=${this._hold_action}\n            .actions=${actions}\n            .configValue=${\"hold_action\"}\n            @value-changed=${this._valueChanged}\n          ></hui-action-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _change(ev: Event) {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    const value = target.checked;\n\n    if (this[`_${target.configValue}`] === value) {\n      return;\n    }\n\n    this._config = {\n      ...this._config,\n      [target.configValue!]: value,\n    };\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    const value = ev.detail.value;\n\n    if (this[`_${target.configValue}`] === value) {\n      return;\n    }\n\n    if (target.configValue) {\n      if (value !== false && !value) {\n        this._config = { ...this._config };\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResultGroup {\n    return configElementStyle;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-picture-entity-card-editor\": HuiPictureEntityCardEditor;\n  }\n}\n"],"names":[],"sourceRoot":""}