# -*- coding: utf-8 -*-
"""Untitled19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K_FtGPSO-4a-4IwLw7tZOI-ZVP2Kmppq
"""

import pandas as pd
import sys



def Topsis(FileName,wts,imp,outputFile):
  

  try:
    df = pd.read_csv(FileName)
  except FileNotFoundError:
    print("Wrong file or file path")

  try:
    weights = wts.split(',')
    impacts = imp.split(',')
  except:
    print(" Weights and impacts must be separated by ',' ")

  try:
    for i in range(0,len(weights)):
      weights[i] = int(weights[i])
  except:
    print("Wrong inputs provided")

  for x in impacts:
    if x!='-' and x!='+':
      raise Exception(" Impacts should only contain '+' or '-' ")

  colNumber = len(df.columns)


  # Number should be same

  if colNumber-1 != len(weights) or len(weights) != len(impacts):
    raise Exception("Number of weights, number of impacts and number of columns (from 2nd to last columns) must be same ")

  # Handling Non-Numeric values

  for i in range(1,colNumber):
    pd.to_numeric(df.iloc[:,i],errors='coerce')
    # df.iloc[:,i].fillna((df.iloc[:,i].mean()),sys.argv[1],inplace = True)

  if colNumber<3:
    raise Exception("Input file must contain 3 or more columns")

  for col in range(1,colNumber):
    temp = 0
    for row in range(len(df)):
      temp = temp + df.iloc[row,col]**2
    temp = temp**0.5
    for row in range(len(df)):
      df.iat[row,col] = (df.iloc[row,col]/temp)*weights[col-1]

  MaxOfEachCol = (df.max().values)[1:]
  MinOfEachCol = (df.min().values)[1:]

  for i in range(1,colNumber):
    if impacts[i-1] == '-':
      MaxOfEachCol[i-1] , MinOfEachCol[i-1] = MinOfEachCol[i-1] , MaxOfEachCol[i-1]

  TopsisScore = []
  for i in range(len(df)):
      temp_p, temp_n = 0, 0
      for j in range(1, colNumber):
          temp_p = temp_p + (MaxOfEachCol[j-1] - df.iloc[i, j])**2
          temp_n = temp_n + (MinOfEachCol[j-1] - df.iloc[i, j])**2
      temp_p, temp_n = temp_p**0.5, temp_n**0.5
      TopsisScore.append(temp_n/(temp_p + temp_n))

  df['Topsis Score'] = TopsisScore
  df['Rank'] = (df['Topsis Score'].rank(method='max', ascending=False))



  df.to_csv(outputFile,index = False)

