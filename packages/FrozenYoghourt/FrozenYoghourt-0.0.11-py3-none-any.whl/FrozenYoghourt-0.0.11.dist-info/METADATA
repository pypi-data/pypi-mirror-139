Metadata-Version: 2.1
Name: FrozenYoghourt
Version: 0.0.11
Summary: Numerical and Symbolic Manipulation for Quantum Computing
Home-page: UNKNOWN
Author: Peter Montgomery
Author-email: petermontgomery056@gmail.com
License: MIT
Keywords: quantum computing
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Education
Classifier: Operating System :: Microsoft :: Windows :: Windows 10
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3

# FrozenYoghourt

FrozenYoghourt is a collections of useful modules for working with circuit theory. Our library offers a tool for both numerical calculation with numpy that is optimized for speed and symbolic manipulation with sympy that is helpful for studying closed form circuit.

We divide our library into 4 main modules.

1. mode: used for switching between numerical and symbolic representations.
2. gates: contains many useful one and two qubits gates. The symbolic representation are especially conducive to analyzing parameterized families.
3. maths: this module contains many mathematical methods that are generally useful for quantum computing
4. quantum: this module contains specific methods for working with circuit decomposition
5. circuit: we are developping this module to optimize matrix multiplication and tensor product in the context of quantum circuits. This should also allows for easy analysis of quantum state and isometry.


Change Log

==========

0.0.1 (10/02/2022)
------------------
- First Release

Date: 10/2/2022

1. Wrote README file
2. Add P gates method to gates.py
3. Add CU method to gates.py
4. Add view method to mode.py
5. Add log.txt for keeping track of changes

0.0.3 (11/02/2022)
------------------

1. Move to_su to maths.py
2. Move kron_decomp to quantum.py
3. Change default variable in the chi method to "x"

0.0.7 (12/02/2022)
------------------

1. Import gates.py to quantum.py

0.0.8 (12/02/2022)
------------------

1. Fix Quantum.double_cosets by importing the correct packages
2. Add default_import method to allow for faster import prompt
3. Change random_local_gates to random_local_ops and allow for creating more operation at the same time.
4. Allow for doing to_su on list of matrices.

0.0.11 (15/02/2022)
-------------------

1. Add view method to visualize numerical matrices
2. Add CAN method
3. Add Gamma gates

0.0.12 (17/02/2022)
-------------------

1. Delete Class from files so now g.CAN will just be CAN. Althought the Mode class is kept.
2. Fix default_import to match the change in 1.

