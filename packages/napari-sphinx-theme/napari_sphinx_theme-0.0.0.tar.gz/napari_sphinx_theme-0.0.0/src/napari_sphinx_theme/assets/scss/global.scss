@import '@/scss/utils';

* {
  box-sizing: border-box;
}

html,
body {
  @apply tw-w-screen tw-h-screen tw-p-0 tw-m-0;
}

main[role='main'] {
  padding-top: 0 !important;

  @media (min-width: 720px) {
    padding-top: 128px !important;
  }
}

html {
  font-size: 100%;
}

// html {
//   /*
//     Use viewport width for fluid typography. The minimum font size is from the
//     design spec, and the maximum font size is set to the user's preferred font
//     size set by their browser settings.

//     Texts, margins, and paddings should use the `text-<size>` Tailwind classes
//     or rem / em units in CSS to ensure the font size is more accessible.

//     https://blog.logrocket.com/the-elements-of-responsive-typography
//   */
//   font-size: viewport-clamp($min-font-size, 100%);

//   /*
//     Awful hack to get clamp resizing working in Safari 14:
//     https://stackoverflow.com/a/65093383

//     We need to use a really small value because we want to keep the viewport
//     unit. If we use `0vw` directly, SASS will automatically remove the unit:
//     https://stackoverflow.com/questions/63965489/safari-14-min-max-clamp-not-working-with-vw-and-px-values#comment116930866_65093383
//   */
//   min-height: 0.0001vw;
// }

// body {
//   // Add scroll for all pages so that the page width stays consistent.
//   @apply tw-overflow-y-scroll;

//   /*
//     Overflow body along x-axis when contents are too long for the page. This
//     should only happen in rare cases where the viewport is < 300px.
//   */
//   @apply tw-overflow-x-auto;

//   // Apply Barlow font to entire site.
//   @apply tw-font-barlow;
// }
