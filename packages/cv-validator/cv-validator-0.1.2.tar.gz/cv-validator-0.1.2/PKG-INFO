Metadata-Version: 2.1
Name: cv-validator
Version: 0.1.2
Summary: Tool for validating your computer vision data and model results.
Home-page: https://github.com/ningeen/cv-validator
License: MIT
Author: Ruslan Sakaev
Author-email: sakaevruslan@gmail.com
Requires-Python: >=3.8,<3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: joblib (>=1.1.0,<2.0.0)
Requires-Dist: numpy (>=1.22.1,<2.0.0)
Requires-Dist: onnx (>=1.11.0,<2.0.0)
Requires-Dist: onnxruntime (>=1.10.0,<2.0.0)
Requires-Dist: opencv-python (>=4.5.5,<5.0.0)
Requires-Dist: pandas (>=1.4.0,<2.0.0)
Requires-Dist: plotly (>=5.6.0,<6.0.0)
Requires-Dist: scipy (>=1.8.0,<2.0.0)
Requires-Dist: tqdm (>=4.62.3,<5.0.0)
Description-Content-Type: text/markdown

<p align="center">
<a href="https://pypi.org/project/cv-validator" target="_blank">
    <img src="https://img.shields.io/pypi/v/cv-validator?color=%2334D058&label=pypi%20package" alt="Package version">
</a>
</p>

# CV validator
Library to validate computer vision data and models.

## Installation
```commandline
pip install cv-validator
```

## Usage
```python
from cv_validator.checks import *
from cv_validator.core.data import DataSource
from cv_validator.core.suite import BaseSuite

# Create class with data information
train = DataSource(train_image_paths, train_labels, train_predictions, transform=None)
test = DataSource(test_image_paths, test_labels, test_predictions, transform=transform)

# Create suite with different checks
suite = BaseSuite(
    checks=[
        ImageSize(),
        ColorShift(),
        BrightnessCheck(need_transformed_img=True),
        ClassifierLabelDistribution(),
        MetricCheck(),
        MetricDiff(),
        MetricBySize(),
        MetricByRatio(),
        HashDuplicates(mode="exact", datasource_type="train"),
    ]
)

# Run checks
suite.run(task="multiclass", train=train, test=test, num_workers=4)
```

